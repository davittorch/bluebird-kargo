apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: "external-secrets"
  namespace: "bluebird"
spec:
  # serviceAccountName: external-secrets-sa
  refreshInterval: 1h
  secretStoreRef:
    name: "aws-secrets"
    kind: "ClusterSecretStore"
  target:
    name: "rds-credentials-k8s"
    creationPolicy: "Owner"
  data:
    - secretKey: "host"
      remoteRef:
        key: "arn:aws:secretsmanager:us-east-1:211125651847:secret:secrets-LA5zJb"
        property: "host"
    - secretKey: "username"
      remoteRef:
        key: "arn:aws:secretsmanager:us-east-1:211125651847:secret:secrets-LA5zJb"
        property: "username"
    - secretKey: "password"
      remoteRef:
        key: "arn:aws:secretsmanager:us-east-1:211125651847:secret:secrets-LA5zJb"
        property: "password"
    - secretKey: "dbname"
      remoteRef:
        key: "arn:aws:secretsmanager:us-east-1:211125651847:secret:secrets-LA5zJb"
        property: "dbname"

---

# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: external-secrets-sa
#   namespace: {{ .Values.externalSecret.namespace }}

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: secret-manager-role
# rules:
# - apiGroups: [""]
#   resources: ["secrets"]
#   verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: secret-manager-rolebinding
# subjects:
# - kind: ServiceAccount
#   name: external-secrets-sa
#   namespace: {{ .Values.externalSecret.namespace }}
# roleRef:
#   kind: ClusterRole
#   name: secret-manager-role
#   apiGroup: rbac.authorization.k8s.io